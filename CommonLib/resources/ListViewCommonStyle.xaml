<!--

Copyright (c) Microsoft Corporation. All rights reserved.
THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.

-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Defines themes for ListView.  This theme is tied into dynamic Visual Studio colors, so
         when the Visual Studio theme changes between Light, Dark, High Contrast, or a custom theme,
         the ListView's style updates accordingly. -->
  
    <!-- ListView Item Control Template -->
    <ControlTemplate x:Key="ListViewCommonItemTemplate" TargetType="{x:Type ListViewItem}">
        <!-- Simplified template of the default List*View* Style, removes much of the chrome -->
        <Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Border x:Name="border" SnapsToDevicePixels="True" BorderBrush="Orange" BorderThickness="0"  Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Margin="{TemplateBinding Margin}">
                    <StackPanel>
                        <Grid>
                            <GridViewRowPresenter  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </StackPanel>
                </Border>
                <TextBlock x:Name="tbSplit" Grid.Row="1" Height="1" Background="#333A73"/>
            </Grid>
            <!--<Line  Stroke="Red"  StrokeThickness="2"  X2="{Binding ElementName=border,Path=ActualWidth}" Visibility="Collapsed"  VerticalAlignment="Center"  x:Name="strikethrough"/>-->
        </Grid>

        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=HideBottomLine}" Value="True">
                <Setter TargetName="tbSplit" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <!-- Selected -->
            <Trigger Property="IsSelected" Value="True">
                <!-- A subset of TreeViewColors are used for applying styles to the ListView.  A TreeView is
                     has a superset of the colors required by a ListView (for expanders). -->
                <!--<Setter Property="Background" Value="#FFFBCE" />-->
                <Setter Property="Foreground" Value="#DDE0FF" />
            </Trigger>

            <!-- Selected but not active (control focused) -->
            <!--<MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#FFFBCE" />
                <Setter Property="Foreground" Value="Black" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemsControl.AlternationIndex" Value="1"/>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="IsMouseOver" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#F5F5F5" />
            </MultiTrigger>-->
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- List View Item Style -->
    <Style x:Key="ListViewCommonItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template" Value="{StaticResource ListViewCommonItemTemplate}" />
        <Setter Property="Background" Value="#272D5B" />
        <Setter Property="Foreground" Value="#A4A9D6" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily"  Value="微软雅黑" />
        <Setter Property="Padding"  Value="5,7" />
        <Setter  Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>

    <!-- List View Column Header Gripper Control Temlate -->
    <ControlTemplate x:Key="GridViewCommonColumnHeaderGripperTemplate" TargetType="{x:Type Thumb}">
        <Border Padding="{TemplateBinding Padding}" Background="Transparent">
            <Rectangle HorizontalAlignment="Center" Width="0" Fill="{TemplateBinding Background}"/>
        </Border>
    </ControlTemplate>

    <!-- ListView Gripper Style -->
    <Style x:Key="GridViewCommonColumnHeaderGripper" TargetType="Thumb">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="#3D4583"/>
        <Setter Property="Template" Value="{StaticResource GridViewCommonColumnHeaderGripperTemplate}" />
    </Style>

    <!-- Listview Grid header column style -->
    <ControlTemplate x:Key="GridViewCommonColumnHeaderTemplate" TargetType="GridViewColumnHeader">
        <Grid>
            <Border Name="HeaderBorder" Padding="{TemplateBinding Padding}" BorderThickness="0" BorderBrush="{TemplateBinding BorderBrush}"  Background="{TemplateBinding Background}" Margin="0">
                <ContentPresenter Name="HeaderContent" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Border>
            <!-- Note the negative margin on the thumb, which gives the gripper a bigger hit area than the actual visual appearance -->
            <Thumb x:Name="PART_HeaderGripper" HorizontalAlignment="Right" Margin="0,0,-4,0" Style="{StaticResource GridViewCommonColumnHeaderGripper}" IsEnabled="False"/>
        </Grid>

        <!--  <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#FBF9ED"/>
                <Setter Property="Foreground" Value="#A87131"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="#FBF9ED"/>
                <Setter Property="Foreground" Value="#A87131"/>
            </Trigger>
        </ControlTemplate.Triggers> -->
    </ControlTemplate>

    <!-- ListView Grid header glyph style -->
    <Style TargetType="{x:Type Path}">
        <Setter Property="Fill" Value="White"/>
        <!--<Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type GridViewColumnHeader}}}" Value="True">
                <Setter Property="Fill" Value="White" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type GridViewColumnHeader}}}" Value="True">
                <Setter Property="Fill" Value="White" />
            </DataTrigger>
        </Style.Triggers>-->
    </Style>

    <!-- ListView Style -->
    <Style x:Key="ListViewCommonStyle" TargetType="{x:Type ListView}">
        <Style.Resources>
            <!-- Override the template for the scrollviewer to adjust the margins on the header of the list view -->
            <!-- Default WPF styles give you 2px left and right padding on the header row. -->
            <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}">
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <DockPanel Margin="{TemplateBinding Padding}">
                                    <ScrollViewer DockPanel.Dock="Top" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
                                        <GridViewHeaderRowPresenter AllowsColumnReorder="{Binding TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderContainerStyle="{Binding TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderToolTip="{Binding TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderStringFormat="{Binding TemplatedParent.View.ColumnHeaderStringFormat, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderContextMenu="{Binding TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplate="{Binding TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}" Columns="{Binding TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplateSelector="{Binding TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" Margin="2,0,2,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </ScrollViewer>
                                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" KeyboardNavigation.DirectionalNavigation="Local" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </DockPanel>
                                <ScrollBar x:Name="PART_HorizontalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0.0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                <ScrollBar x:Name="PART_VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0.0" Orientation="Vertical" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                <DockPanel Background="{Binding Background, ElementName=PART_VerticalScrollBar}" Grid.Column="1" LastChildFill="false" Grid.Row="1">
                                    <Rectangle DockPanel.Dock="Left" Fill="White" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Width="1"/>
                                    <Rectangle DockPanel.Dock="Top" Fill="White" Height="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                </DockPanel>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Style for header columns -->
            <Style x:Key="{x:Type GridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Foreground" Value="#DDE0FF"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontFamily"  Value="微软雅黑" />
                <Setter Property="Background" Value="#3D4583"/>
                <Setter Property="Padding" Value="8,2,2,2" />
                <Setter Property="Template" Value="{StaticResource GridViewCommonColumnHeaderTemplate}" />
            </Style>
        </Style.Resources>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListViewCommonItemStyle}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="#272D5B" />
        <Setter Property="FontFamily"  Value="Microsoft YaHei" />
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <!--用于隔行变色-->
        <Setter Property="AlternationCount" Value="2"/>
    </Style>
</ResourceDictionary>